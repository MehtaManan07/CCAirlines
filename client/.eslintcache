[{"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\actions\\airport.js":"1","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\Navbar.js":"2","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\App.js":"3","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\Home.js":"4","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\Flights.js":"5","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\BookingTable.js":"6","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\WebHome.js":"7","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\actions\\auth.js":"8","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\types.js":"9","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\reducers\\auth.js":"10","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\FlightForm.js":"11","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\NewFlight.js":"12","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\reducers\\airport.js":"13"},{"size":2946,"mtime":1606854544479,"results":"14","hashOfConfig":"15"},{"size":2281,"mtime":1606851261022,"results":"16","hashOfConfig":"15"},{"size":1381,"mtime":1606851345751,"results":"17","hashOfConfig":"15"},{"size":2048,"mtime":1606847960157,"results":"18","hashOfConfig":"15"},{"size":1865,"mtime":1606828177543,"results":"19","hashOfConfig":"15"},{"size":7417,"mtime":1606843416296,"results":"20","hashOfConfig":"15"},{"size":2361,"mtime":1606848253268,"results":"21","hashOfConfig":"15"},{"size":1691,"mtime":1606852656306,"results":"22","hashOfConfig":"15"},{"size":338,"mtime":1606854422087,"results":"23","hashOfConfig":"15"},{"size":515,"mtime":1606851857548,"results":"24","hashOfConfig":"15"},{"size":2804,"mtime":1606850158193,"results":"25","hashOfConfig":"15"},{"size":6865,"mtime":1606854633347,"results":"26","hashOfConfig":"15"},{"size":529,"mtime":1606852583236,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l0cemm",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\actions\\airport.js",[],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\App.js",["59"],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\Home.js",["60"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport FlightForm from '../components/FlightForm';\r\nimport { getFlights } from '../redux/actions/airport';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const airport = useSelector((state) => state.airport);\r\n  const { flights } = airport;\r\n  useEffect(() => {\r\n    dispatch(getFlights());\r\n  }, []);\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <FlightForm />\r\n      <br />\r\n      <hr />\r\n      <h1 className=\"text-center\"> All Airports </h1>\r\n      <br />\r\n      {flights && (\r\n        <table className=\"table table-striped table-bordered text-center table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">From</th>\r\n              <th scope=\"col\">To</th>\r\n              <th scope=\"col\">Arrival</th>\r\n              <th scope=\"col\">Departure</th>\r\n              <th scope=\"col\">Base Price</th>\r\n              <th scope=\"col\">{``}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {flights && flights.length > 0 ? (\r\n              flights.map((flight, i) => (\r\n                <tr key={i}>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{flight.name}</td>\r\n                  <td>{flight.from.name}</td>\r\n                  <td>{flight.to.name}</td>\r\n                  <td>{flight.arrivalDate.substr(11, 5)} </td>\r\n                  <td>{flight.departureDate.substr(11, 5)}</td>\r\n                  <td>Rs {flight.basePrice}</td>\r\n                  <Link\r\n                    to={`/booking/${flight._id}`}\r\n                    className=\"btn btn-success\"\r\n                  >\r\n                    Book now\r\n                  </Link>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\Flights.js",["61","62"],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\BookingTable.js",["63"],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\WebHome.js",["64"],"import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { webCheck } from '../redux/actions/airport';\r\n\r\nconst Login = ({ history }) => {\r\n  const [values, setValues] = useState({ email: '', pnr: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(webCheck(values,history));\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          {!loading ? <h3>Web check-In</h3> : <h3>Loading...</h3>}\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control mb-2\"\r\n                autoFocus\r\n                required\r\n                value={values.email}\r\n                onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"PNR\"\r\n                required\r\n                className=\"form-control\"\r\n                value={values.pnr}\r\n                onChange={(e) => setValues({ ...values, pnr: e.target.value })}\r\n              />\r\n            </div>\r\n            <Button\r\n              onClick={submitHandler}\r\n              block\r\n              shape=\"round\"\r\n              icon={<MailOutlined />}\r\n              size=\"large\"\r\n            //   disabled={loading || !values.email || !values.pnr}\r\n              type=\"ghost\"\r\n              className=\"mb-3\"\r\n            >\r\n              Check in\r\n            </Button>\r\n            <Button\r\n              onClick={() => history.push('/')}\r\n              block\r\n              shape=\"round\"\r\n              icon={<MailOutlined />}\r\n              size=\"large\"\r\n              type=\"ghost\"\r\n              className=\"mb-3\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\actions\\auth.js",[],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\types.js",[],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\reducers\\auth.js",["65","66"],"import * as types from '../types';\r\n\r\nexport default (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case types.SIGNUP:\r\n      console.log(payload);\r\n      localStorage.setItem('clientCC', '12091u0298ry4948ty48hr23r');\r\n      return payload;\r\n    case types.LOGIN:\r\n      localStorage.setItem('clientCC', '12091u0298ry4948ty48hr23r');\r\n      console.log(payload);\r\n      return payload;\r\n    case types.LOGOUT:\r\n      localStorage.removeItem('clientCC');\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\components\\FlightForm.js",["67"],"C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\pages\\NewFlight.js",["68"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, DatePicker, Select, Space } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllAirports, newFlight } from '../redux/actions/airport';\r\nimport { getStaff } from '../redux/actions/auth';\r\n\r\nconst NewFlight = ({ history }) => {\r\n  const airport = useSelector((state) => state.airport);\r\n  const [loading, setLoading] = useState(false);\r\n  const { airports, staff } = airport;\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    from: '',\r\n    to: '',\r\n    crewStaff: [],\r\n    featureDisplay: ['magazines', 'drinks', 'dinner', 'lunch'],\r\n    features: [],\r\n    departureDate: '',\r\n    arrivalDate: '',\r\n  });\r\n  const [seatsToAdd, setSeatsToAdd] = useState({\r\n    Economy: 0,\r\n    Business: 0,\r\n    FirstClass: 0,\r\n  },)\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    await dispatch(newFlight({...values, ...seatsToAdd},history));\r\n    setLoading(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getStaff());\r\n    dispatch(getAllAirports());\r\n  }, []);\r\n  const onChange = (name) => (e) => {\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          {!loading ? <h3>Login</h3> : <h3>Loading...</h3>}\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name of Flight\"\r\n                className=\"form-control mb-2\"\r\n                autoFocus\r\n                required\r\n                value={values.name}\r\n                onChange={onChange('name')}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                onChange={onChange('from')}\r\n                className=\"custom-select form-control\"\r\n              >\r\n                <option placeholder=\"From\">From</option>\r\n                {airports &&\r\n                  airports.map((airport) => (\r\n                    <option value={airport._id} id={airport._id}>\r\n                      {airport.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                onChange={onChange('to')}\r\n                className=\"custom-select form-control\"\r\n              >\r\n                <option placeholder=\"To\">To</option>\r\n                {airports &&\r\n                  airports.map((airport, o) => (\r\n                    <option value={airport._id} id={o}>\r\n                      {airport.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Space direction=\"vertical\" size={12}>\r\n                <DatePicker\r\n                  placeholder=\"Departure Date\"\r\n                  showTime\r\n                  onChange={(v, d) =>\r\n                    setValues({ ...values, departureDate: d })\r\n                  }\r\n                />\r\n              </Space>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Space direction=\"vertical\" size={12}>\r\n                <DatePicker\r\n                  placeholder=\"Arrival Date\"\r\n                  showTime\r\n                  onChange={(v, d) => setValues({ ...values, arrivalDate: d })}\r\n                />\r\n              </Space>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                placeholder=\"Select Crew members\"\r\n                value={values.crewStaff}\r\n                onChange={(value) => setValues({ ...values, crewStaff: value })}\r\n              >\r\n                {staff &&\r\n                  staff.map((member) => (\r\n                    <Select.Option value={member._id}>\r\n                      {' '}\r\n                      {member.name}{' '}\r\n                    </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                placeholder=\"Select facilities\"\r\n                value={values.features}\r\n                onChange={(value) => setValues({ ...values, features: value })}\r\n              >\r\n                {values.featureDisplay &&\r\n                  values.featureDisplay.map((f) => (\r\n                    <Select.Option value={f}> {f} </Select.Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Economy class seats</label>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Seats for economy class\"\r\n                className=\"form-control mb-2\"\r\n                autoFocus\r\n                required\r\n                value={seatsToAdd.Economy}\r\n                onChange={(e) =>\r\n                  setSeatsToAdd({seatsToAdd,\r\n                    Economy: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Business class seats</label>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Seats for business class\"\r\n                className=\"form-control mb-2\"\r\n                autoFocus\r\n                required\r\n                value={seatsToAdd.Business}\r\n                onChange={(e) =>\r\n                  setSeatsToAdd({ ...seatsToAdd, Business: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">First class seats</label>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Seats for first class\"\r\n                className=\"form-control mb-2\"\r\n                autoFocus\r\n                required\r\n                value={seatsToAdd.FirstClass}\r\n                onChange={(e) =>\r\n                  setSeatsToAdd({\r\n                    ...seatsToAdd,\r\n                    FirstClass: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <Button\r\n              onClick={submitHandler}\r\n              block\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              disabled={loading}\r\n              type=\"ghost\"\r\n              className=\"mb-3\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewFlight;\r\n","C:\\Users\\Manan\\CourseraProjects\\MERN\\ccAirlines\\client\\src\\redux\\reducers\\airport.js",["69"],"import * as types from '../types';\r\n\r\nexport default (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case types.GET_AIRPORTS:\r\n      console.log(payload);\r\n      return {...state, airports: payload};\r\n    case types.GET_FLIGHTS:\r\n      console.log(payload);\r\n      return {...state, flights: payload};\r\n    case types.GET_FLIGHT:\r\n      console.log(payload);\r\n      return {...state, flight: payload};\r\n    case types.GET_STAFF:\r\n      return {...state, staff: payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",{"ruleId":"70","severity":1,"message":"71","line":22,"column":6,"nodeType":"72","endLine":22,"endColumn":8,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"71","line":13,"column":6,"nodeType":"72","endLine":13,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":6,"column":9,"nodeType":"77","messageId":"78","endLine":6,"endColumn":17},{"ruleId":"75","severity":1,"message":"80","line":22,"column":8,"nodeType":"77","messageId":"78","endLine":22,"endColumn":12},{"ruleId":"75","severity":1,"message":"81","line":9,"column":19,"nodeType":"77","messageId":"78","endLine":9,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":3,"column":1,"nodeType":"84","endLine":18,"endColumn":3},{"ruleId":"85","severity":1,"message":"86","line":15,"column":5,"nodeType":"87","messageId":"88","endLine":16,"endColumn":20},{"ruleId":"70","severity":1,"message":"71","line":26,"column":6,"nodeType":"72","endLine":26,"endColumn":8,"suggestions":"89"},{"ruleId":"70","severity":1,"message":"71","line":38,"column":6,"nodeType":"72","endLine":38,"endColumn":8,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":1,"nodeType":"84","endLine":19,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'show' is assigned a value but never used.","'setLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default",["93"],["94"],{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"95","fix":"98"},{"desc":"95","fix":"99"},"Update the dependencies array to be: [dispatch]",{"range":"100","text":"101"},{"range":"102","text":"101"},{"range":"103","text":"101"},{"range":"104","text":"101"},[742,744],"[dispatch]",[454,456],[904,906],[1142,1144]]